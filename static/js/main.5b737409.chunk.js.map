{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeholder","handleChange","searchName","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filtereddMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAIaA,EAAM,SAACC,GAAD,OACf,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCFKC,G,MAAW,SAAAR,GAAK,OAE3B,qBAAKC,UAAU,YAAf,SAEMD,EAAMI,QAAQK,KAAI,SAAAL,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNdK,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,WAA9B,OACrB,uBACKZ,UAAYY,EACZC,KAAK,SACLH,YAAcA,EACdI,SAAUH,MC0CJI,E,kDA3Cb,aAAc,IAAD,8BACX,gBAcFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXlB,QAAS,GACTe,YAAY,IALH,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACd,QAASuB,S,oBAQzC,WAAS,IAAD,EAC0BC,KAAKN,MAA7BlB,EADF,EACEA,QAAQe,EADV,EACUA,YACVU,EAAmBzB,EAAQ0B,QAAO,SAAA1B,GAAO,OAC7CA,EAAQE,KAAKyB,cAAcC,SAASb,MACtC,OACA,sBAAKlB,UAAU,MAAf,UAEA,qBAAKA,UAAU,QAAQE,IAAI,cAAcD,IAAI,eAE7C,cAAC,EAAD,CACIW,WAAW,SACXF,YAAY,iBACZC,aAAgBgB,KAAKhB,eAGxB,cAAC,EAAD,CACIR,QAAWyB,W,GArCFI,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5b737409.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card =(props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=150x150`} />\r\n        <h2> {props.monster.name} </h2>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component.jsx';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n\r\n  <div className='card-list'>\r\n    {\r\n        props.monster.map(monster => (\r\n        <Card key={monster.id} monster={monster}/>))\r\n    }\r\n\r\n</div>);","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\n//example of functional component\r\nexport const SearchBox = ({ placeholder, handleChange, searchName }) => (\r\n    <input \r\n         className= {searchName}\r\n         type='search' \r\n         placeholder={ placeholder } \r\n         onChange={handleChange}\r\n    />\r\n);","import { CardList } from './components/card-list/card-list.components';\nimport React, { Component } from 'react';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.components';\n\n\n\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monster: [],\n      searchField:[]\n    };\n  }\n  \n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monster: users}))\n\n  }\n  handleChange = (e) =>{\n    this.setState({ searchField: e.target.value})\n  }\n \n\n  render(){\n    const { monster,searchField } = this.state;\n    const filtereddMonster = monster.filter(monster => \n      monster.name.toLowerCase().includes(searchField));\n    return (\n    <div className=\"App\">\n    \n    <img className='title' src='./title.png' alt='demon logo'/>\n\n    <SearchBox\n        searchName='search'\n        placeholder='search monster' \n        handleChange = {this.handleChange}\n    />\n\n     <CardList\n         monster = {filtereddMonster}/>\n    </div>\n  );\n}\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}